#!/bin/sh

prog_files="$(cygpath "$PROGRAMFILES")/"
# since you cannot have '(' or ')' in a variable name, we are guessing the correct path based on $PROGRAMFILES...
if [ -d "$PROGRAMFILES (x86)" ]; then
  prog_files_6432="$(cygpath "$PROGRAMFILES (x86)")/";
fi

# similar to append_to_path, but more convenient if a program may be 32 or 64 bit
append_program_dir_to_path(){
  if append_to_path "$prog_files$1"; then
    return 0;
  fi
  # in case we have 64 bit windows and 32 bit installation directory
  if [ -n "${prog_files_6432+x}" ]; then
    if append_to_path "$prog_files_6432$1"; then
      return 0;
    fi
  fi
  return 1;
}

# not real sudo, but better than nothing
as_admin() {
  cygstart --action=runas "$@"
}


append_program_dir_to_path "CMake/bin"
if append_program_dir_to_path "Meld"; then
  define_alias_ifndef meld Meld.exe
fi
append_program_dir_to_path "Mozilla Firefox"
append_program_dir_to_path "Mozilla Thunderbird"
if append_program_dir_to_path "Notepad++"; then
  define_alias_ifndef npp 'notepad++.exe'
fi
if append_program_dir_to_path "WinMerge"; then
  define_alias_ifndef winmerge WinMergeU.exe
fi

alias ls="ls --color=auto --append-exe"

# FIXME: create function, if -File used, use cygpath
defender(){
  '/cygdrive/c/Program Files/Windows Defender/MpCmdRun.exe'
}

explorer() {(
  # cd instead of passing path as param to avoid issues with cygwin/mingw/git-bash differences and conversions, also explorer is picky about / and \
  # but cd might fail with server paths, while explorer might prompt for more informations... could try a fallback stratey
  [ $# -eq 0 ] && set -- "$@" '.';
  if [ $# -eq 1 ] && [ -d "$1" ]; then :;
    cd "$1";
    # explorer.exe return 1 in case of "success"
    explorer.exe . || [ $? -eq 1 ]
  else
    explorer.exe "$@" || [ $? -eq 1 ]
  fi
)}
